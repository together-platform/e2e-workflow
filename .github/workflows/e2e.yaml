# See confluence for the documentation
name: Together E2E Testing Workflow

on:
  workflow_call:
    inputs:
      username:
        required: true
        type: string
      branch:
        required: true
        type: string
      backendPairingRepo:
        required: true
        type: string
      backendMentoringRepo:
        required: true
        type: string
      backendEnvironment:
        required: true
        type: string
    secrets:
      token:
        required: true
      gcp:
        required: true

jobs:

  # This job pull latest version of ${{ inputs.backendMentoringRepo }}'s branch that initiated this workflow or production if not found...
  # ... installs all dependencies and caches the result
  # Provides output of:
  #   @branch - representing the branch that is used for this job
  #   @commit - representing the commit that is used for this job
  backend-mentoring-prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      branch: ${{ steps.pick_branch.outputs.branch }}
      commit: ${{ steps.pick_branch.outputs.commit }}

    steps:

      - name: Determine branch and commit
        id: pick_branch
        shell: bash
        run: |
          BRANCH=${{ inputs.branch }}
          if git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.backendMentoringRepo }} ${BRANCH}; then
            echo "$BRANCH branch found"
          else
            BRANCH="production"
          fi
          COMMIT_ID=$(git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.backendMentoringRepo }} ${BRANCH} | awk '{ print $1}')
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=commit::${COMMIT_ID}"
          echo $BRANCH:$COMMIT_ID

      # If we already have cached version for this commit then we can skip all further steps
      - name: Try to find this version in cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendMentoringRepo }}
          key: ${{ inputs.backendMentoringRepo }}-source-and-dependencies-${{steps.pick_branch.outputs.commit}}

      - name: Fetch branch + commit
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: together-platform/${{ inputs.backendMentoringRepo }}
          ref: ${{ steps.pick_branch.outputs.branch }}
          path: ${{ inputs.backendMentoringRepo }}
          token: ${{ secrets.token }}

      - name: Use Node.js
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          cache-dependency-path: './${{ inputs.backendMentoringRepo }}/yarn.lock'
          node-version-file: './${{ inputs.backendMentoringRepo }}/.nvmrc'

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        working-directory: ./${{ inputs.backendMentoringRepo }}

      - name: Set cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendMentoringRepo }}
          key: ${{ inputs.backendMentoringRepo }}-source-and-dependencies-${{steps.pick_branch.outputs.commit}}

  # This job pull latest version of ${{ inputs.backendPairingRepo }}'s branch that initiated this workflow or production if not found...
  # ... installs all dependencies and set 2 caches: for dependencies folder and sources folder
  # Provides output of:
  #   @branch - representing the branch that is used for this job
  #   @commit - representing the commit that is used for this job
  backend-pairing-prepare:

    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      branch: ${{ steps.pick_branch.outputs.branch }}
      commit: ${{ steps.pick_branch.outputs.commit }}

    steps:

      - name: Determine branch and commit
        id: pick_branch
        shell: bash
        run: |
          BRANCH=${{ inputs.branch }}
          if git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.backendPairingRepo }} ${BRANCH}; then
            echo "$BRANCH branch found"
          else
            BRANCH="production"
          fi
          COMMIT_ID=$(git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.backendPairingRepo }} ${BRANCH} | awk '{ print $1}')
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=commit::${COMMIT_ID}"
          echo $BRANCH:$COMMIT_ID

      # If we already have cached version for this commit then we can skip all further steps
      - name: Try to find this version in cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendPairingRepo }}
          key: ${{ inputs.backendPairingRepo }}-source-${{steps.pick_branch.outputs.commit}}

      - name: Fetch branch + commit
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: together-platform/${{ inputs.backendPairingRepo }}
          ref: ${{ steps.pick_branch.outputs.branch }}
          path: ${{ inputs.backendPairingRepo }}
          token: ${{ secrets.token }}

      - name: Set up Python 3.7.15
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-python@v2
        with:
          python-version: "3.7.15"

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.lock ]; then pip install -r requirements.lock; fi
        working-directory: ./${{ inputs.backendPairingRepo }}

      - name: Set cache for dependencies folder
        uses: actions/cache@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: /opt/hostedtoolcache/Python/3.7.15/x64/lib/python3.7/site-packages
          key: ${{ inputs.backendPairingRepo }}-dependencies-${{steps.pick_branch.outputs.commit}}

      - name: Set cache for sources folder
        uses: actions/cache@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ./${{ inputs.backendPairingRepo }}
          key: ${{ inputs.backendPairingRepo }}-source-${{steps.pick_branch.outputs.commit}}

  # This job pulls cached versions of all application repos: ${{ inputs.backendMentoringRepo }}, ${{ inputs.backendPairingRepo }}
  # Runs back-end services: ${{ inputs.backendMentoringRepo }} and ${{ inputs.backendPairingRepo }}
  start-servers-and-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [backend-pairing-prepare, backend-mentoring-prepare]

    steps:
      - name: Set up Python 3.7.15
        uses: actions/setup-python@v2
        with:
          python-version: "3.7.15"

      # Required to decode secrets used in back-end services
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.gcp }}
          export_default_credentials: true
      - name: Use gcloud CLI
        run: gcloud info

      - name: Get ${{ inputs.backendPairingRepo }} source
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendPairingRepo }}
          key: ${{ inputs.backendPairingRepo }}-source-${{needs.backend-pairing-prepare.outputs.commit}}

      - name: Get ${{ inputs.backendPairingRepo }} dependencies
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python/3.7.15/x64/lib/python3.7/site-packages
          key: ${{ inputs.backendPairingRepo }}-dependencies-${{needs.backend-pairing-prepare.outputs.commit}}

      - name: Get ${{ inputs.backendMentoringRepo }} source and dependencies
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendMentoringRepo }}
          key: ${{ inputs.backendMentoringRepo }}-source-and-dependencies-${{needs.backend-mentoring-prepare.outputs.commit}}

      - name: Start ${{ inputs.backendPairingRepo }}
        run: make start & echo 'Starting service'
        working-directory: ./${{ inputs.backendPairingRepo }}
        env:
          TOGETHER_ENVIRONMENT: ${{ inputs.backendEnvironment }}

      - name: Wait for ${{ inputs.backendPairingRepo }}
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:9000/pairing/_release'
          responseCode: 200
          timeout: 10000
          interval: 500

      - name: Use backend Node.js version
        uses: actions/setup-node@v2
        with:
          node-version-file: './${{ inputs.backendMentoringRepo }}/.nvmrc'

      - name: Start ${{ inputs.backendMentoringRepo }}
        run: yarn start-production & npx wait-on http://localhost:8080/mentoring/_release
        working-directory: ./${{ inputs.backendMentoringRepo }}
        env:
          TOGETHER_ENVIRONMENT: ${{ inputs.backendEnvironment }}

      # Sets node version to mentoring-service node version in order to run endpoint tests
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          cache-dependency-path: './${{ inputs.backendMentoringRepo }}/yarn.lock'
          node-version-file: './${{ inputs.backendMentoringRepo }}/.nvmrc'

      # run endpoint tests
      - name: Run mentoring-service endpoint tests on ${{ inputs.backendMentoringRepo }}
        run: yarn test:integration
        working-directory: ./${{ inputs.backendMentoringRepo }}
        env:
          TOGETHER_ENVIRONMENT: ${{ inputs.backendEnvironment }}

