# See confluence for the documentation
name: Together E2E Testing Workflow

on:
  workflow_call:
    inputs:
      username:
        required: true
        type: string
      branch:
        required: true
        type: string
      backendPairingRepo:
        required: true
        type: string
      backendMentoringRepo:
        required: true
        type: string
      frontendRepo:
        required: true
        type: string
      e2eTestsRepo:
        required: true
        type: string
      backendEnvironment:
        required: true
        type: string
      frontendEnvironment:
        required: true
        type: string
    secrets:
      token:
        required: true
      gcp:
        required: true
      demo_admin_password:
        required: true

jobs:

  # This job pull latest version of ${{ inputs.backendMentoringRepo }}'s branch that initiated this workflow or production if not found...
  # ... installs all dependencies and caches the result
  # Provides output of:
  #   @branch - representing the branch that is used for this job
  #   @commit - representing the commit that is used for this job
  backend-mentoring-prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      branch: ${{ steps.pick_branch.outputs.branch }}
      commit: ${{ steps.pick_branch.outputs.commit }}

    steps:

      - name: Determine branch and commit
        id: pick_branch
        shell: bash
        run: |
          BRANCH=${{ inputs.branch }}
          if git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.backendMentoringRepo }} ${BRANCH}; then
            echo "$BRANCH branch found"
          else
            BRANCH="production"
          fi
          COMMIT_ID=$(git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.backendMentoringRepo }} ${BRANCH} | awk '{ print $1}')
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=commit::${COMMIT_ID}"
          echo $BRANCH:$COMMIT_ID

      # If we already have cached version for this commit then we can skip all further steps
      - name: Try to find this version in cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendMentoringRepo }}
          key: ${{ inputs.backendMentoringRepo }}-source-and-dependencies-${{steps.pick_branch.outputs.commit}}

      - name: Fetch branch + commit
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: together-platform/${{ inputs.backendMentoringRepo }}
          ref: ${{ steps.pick_branch.outputs.branch }}
          path: ${{ inputs.backendMentoringRepo }}
          token: ${{ secrets.token }}

      - name: Use Node.js 12.16.1
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v2
        with:
          node-version: 12.16.1

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install yarn && yarn install
        working-directory: ./${{ inputs.backendMentoringRepo }}

      - name: Set cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendMentoringRepo }}
          key: ${{ inputs.backendMentoringRepo }}-source-and-dependencies-${{steps.pick_branch.outputs.commit}}

  # This job pull latest version of ${{ inputs.frontendRepo }}s's branch that initiated this workflow or production if not found...
  # ... installs all dependencies, make build and set cache
  # Provides output of:
  #   @branch - representing the branch that is used for this job
  #   @commit - representing the commit that is used for this job
  frontend-prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    outputs:
      branch: ${{ steps.pick_branch.outputs.branch }}
      commit: ${{ steps.pick_branch.outputs.commit }}

    steps:

      - name: Determine branch and commit
        id: pick_branch
        shell: bash
        run: |
          BRANCH=${{ inputs.branch }}
          if git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.frontendRepo }} ${BRANCH}; then
            echo "$BRANCH branch found"
          else
            BRANCH="production"
          fi
          COMMIT_ID=$(git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.frontendRepo }} ${BRANCH} | awk '{ print $1}')
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=commit::${COMMIT_ID}"
          echo $BRANCH:$COMMIT_ID

      # If we already have cached version for this commit then we can skip all further steps
      - name: Try to find this version in cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.frontendRepo }}
          key: ${{ inputs.frontendRepo }}-build-${{steps.pick_branch.outputs.commit}}

      - name: Fetch branch + commit
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: together-platform/${{ inputs.frontendRepo }}
          ref: ${{ steps.pick_branch.outputs.branch }}
          path: ${{ inputs.frontendRepo }}
          token: ${{ secrets.token }}

      - name: Use Node.js
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          cache-dependency-path: './${{ inputs.frontendRepo }}/yarn.lock'
          node-version-file: './${{ inputs.frontendRepo }}/.nvmrc'

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install && yarn global add serve
        working-directory: ./${{ inputs.frontendRepo }}
        env:
          REACT_APP_ENV: ${{ inputs.frontendEnvironment }}
          CI: false

      - name: Create build
        if: steps.cache.outputs.cache-hit != 'true'
        run: sh -ac '. ./.env; yarn build-app && yarn build-write-release-version'
        working-directory: ./${{ inputs.frontendRepo }}
        env:
          REACT_APP_ENV: ${{ inputs.frontendEnvironment }}

      - name: Set cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.frontendRepo }}
          key: ${{ inputs.frontendRepo }}-build-${{steps.pick_branch.outputs.commit}}

  # This job pull latest version of ${{ inputs.backendPairingRepo }}'s branch that initiated this workflow or production if not found...
  # ... installs all dependencies and set 2 caches: for dependencies folder and sources folder
  # Provides output of:
  #   @branch - representing the branch that is used for this job
  #   @commit - representing the commit that is used for this job
  backend-pairing-prepare:

    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      branch: ${{ steps.pick_branch.outputs.branch }}
      commit: ${{ steps.pick_branch.outputs.commit }}

    steps:

      - name: Determine branch and commit
        id: pick_branch
        shell: bash
        run: |
          BRANCH=${{ inputs.branch }}
          if git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.backendPairingRepo }} ${BRANCH}; then
            echo "$BRANCH branch found"
          else
            BRANCH="production"
          fi
          COMMIT_ID=$(git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.backendPairingRepo }} ${BRANCH} | awk '{ print $1}')
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=commit::${COMMIT_ID}"
          echo $BRANCH:$COMMIT_ID

      # If we already have cached version for this commit then we can skip all further steps
      - name: Try to find this version in cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendPairingRepo }}
          key: ${{ inputs.backendPairingRepo }}-source-${{steps.pick_branch.outputs.commit}}

      - name: Fetch branch + commit
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: together-platform/${{ inputs.backendPairingRepo }}
          ref: ${{ steps.pick_branch.outputs.branch }}
          path: ${{ inputs.backendPairingRepo }}
          token: ${{ secrets.token }}

      - name: Set up Python 3.7.5
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-python@v2
        with:
          python-version: "3.7.5"

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.lock ]; then pip install -r requirements.lock; fi
        working-directory: ./${{ inputs.backendPairingRepo }}

      - name: Set cache for dependencies folder
        uses: actions/cache@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: /opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages
          key: ${{ inputs.backendPairingRepo }}-dependencies-${{steps.pick_branch.outputs.commit}}

      - name: Set cache for sources folder
        uses: actions/cache@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ./${{ inputs.backendPairingRepo }}
          key: ${{ inputs.backendPairingRepo }}-source-${{steps.pick_branch.outputs.commit}}

  # THIS REPO holds e2e tests and test runner (cypress)
  # This job pull latest version of ${{ inputs.e2eTestsRepo }}'s branch that initiated this workflow or production if not found...
  # ... installs all dependencies and set 2 caches: for dependencies folder and sources folder
  # Provides output of:
  #   @branch - representing the branch that is used for this job
  #   @commit - representing the commit that is used for this job
  e2e-tests-prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      branch: ${{ steps.pick_branch.outputs.branch }}
      commit: ${{ steps.pick_branch.outputs.commit }}

    steps:
      - name: Determine branch and commit
        id: pick_branch
        shell: bash
        run: |
          BRANCH=${{ inputs.branch }}
          if git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.e2eTestsRepo }} ${BRANCH}; then
            echo "$BRANCH branch found"
          else
            BRANCH="production"
          fi
          COMMIT_ID=$(git ls-remote --exit-code --heads https://${{ inputs.username }}:${{ secrets.token }}@github.com/together-platform/${{ inputs.e2eTestsRepo }} ${BRANCH} | awk '{ print $1}')
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=commit::${COMMIT_ID}"
          echo $BRANCH:$COMMIT_ID

      # If we already have cached version for this commit then we can skip all further steps
      - name: Try to find this version in cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.e2eTestsRepo }}
          key: ${{ inputs.e2eTestsRepo }}-source-${{steps.pick_branch.outputs.commit}}

      - name: Fetch branch + commit
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: together-platform/${{ inputs.e2eTestsRepo }}
          ref: ${{ steps.pick_branch.outputs.branch }}
          path: ${{ inputs.e2eTestsRepo }}
          token: ${{ secrets.token }}

      - name: Use Node.js 12.18.0
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v2
        with:
          node-version: 12.18.0

      - name: Install dependencies
        run: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ./${{ inputs.e2eTestsRepo }}

      - name: Set cache for sources folder
        uses: actions/cache@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ./${{ inputs.e2eTestsRepo }}
          key: ${{ inputs.e2eTestsRepo }}-source-${{steps.pick_branch.outputs.commit}}

      - name: Set cache for dependencies folder
        uses: actions/cache@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ~/.cache/Cypress
          key: ${{ inputs.e2eTestsRepo }}-dependencies-${{steps.pick_branch.outputs.commit}}

  # This job pulls cached versions of all application repos: ${{ inputs.backendMentoringRepo }}, ${{ inputs.backendPairingRepo }} and ${{ inputs.frontendRepo }}
  # Also pull cached version of ${{ inputs.e2eTestsRepo }} repo
  # Runs back-end services: ${{ inputs.backendMentoringRepo }} and ${{ inputs.backendPairingRepo }}
  # Runs script to create new demo org for testing
  # Starts ${{ inputs.frontendRepo }} build by using "serve" package
  # Runs cypress tests
  # IF some tests are failed -> uploads videos of failed tests as an artifacts
  # Provides output of:
  #   @organizationId - id of the organization that was created and used for testing
  start-servers-and-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [backend-pairing-prepare, backend-mentoring-prepare, frontend-prepare, e2e-tests-prepare]

    outputs:
      organizationId: ${{ steps.create_org_for_tests.outputs.organizationId }}

    steps:
      - name: Use Node.js 12.16.1
        uses: actions/setup-node@v2
        with:
          node-version: 12.16.1

      - name: Set up Python 3.7.5
        uses: actions/setup-python@v2
        with:
          python-version: "3.7.5"

      # Required to decode secrets used in back-end services
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.gcp }}
          export_default_credentials: true
      - name: Use gcloud CLI
        run: gcloud info

      - name: Get ${{ inputs.backendPairingRepo }} source
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendPairingRepo }}
          key: ${{ inputs.backendPairingRepo }}-source-${{needs.backend-pairing-prepare.outputs.commit}}

      - name: Get ${{ inputs.backendPairingRepo }} dependencies
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages
          key: ${{ inputs.backendPairingRepo }}-dependencies-${{needs.backend-pairing-prepare.outputs.commit}}

      - name: Get ${{ inputs.backendMentoringRepo }} source and dependencies
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendMentoringRepo }}
          key: ${{ inputs.backendMentoringRepo }}-source-and-dependencies-${{needs.backend-mentoring-prepare.outputs.commit}}

      - name: Get ${{ inputs.frontendRepo }}
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.frontendRepo }}
          key: ${{ inputs.frontendRepo }}-build-${{needs.frontend-prepare.outputs.commit}}

      - name: Get ${{ inputs.e2eTestsRepo }} source
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.e2eTestsRepo }}
          key: ${{ inputs.e2eTestsRepo }}-source-${{needs.e2e-tests-prepare.outputs.commit}}

      - name: Get ${{ inputs.e2eTestsRepo }} dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: ${{ inputs.e2eTestsRepo }}-dependencies-${{needs.e2e-tests-prepare.outputs.commit}}

      - name: Start ${{ inputs.backendPairingRepo }}
        run: make start & npx wait-on http://localhost:9000/pairing/_release
        working-directory: ./${{ inputs.backendPairingRepo }}
        env:
          TOGETHER_ENVIRONMENT: ${{ inputs.backendEnvironment }}

      - name: Start ${{ inputs.backendMentoringRepo }}
        run: yarn start-production & npx wait-on http://localhost:8080/mentoring/_release
        working-directory: ./${{ inputs.backendMentoringRepo }}
        env:
          TOGETHER_ENVIRONMENT: ${{ inputs.backendEnvironment }}

      - name: Create new demo org for testing
        id: create_org_for_tests
        run: |
          yarn babel-node --extensions ".ts,.js" lib/scripts/createDemoOrg/createDemoOrg.js E2E:${{github.run_id}} organizationId.txt && ORG_ID=$(cat "organizationId.txt") && echo "::set-output name=organizationId::${ORG_ID}"
        working-directory: ./${{ inputs.backendMentoringRepo }}
        env:
          TOGETHER_ENVIRONMENT: ${{ inputs.backendEnvironment }}

      - name: Change to frontend node version
        uses: actions/setup-node@v2
        with:
          node-version-file: './${{ inputs.frontendRepo }}/.nvmrc'

      - name: Start frontend
        run: yarn serve -s build -l 3000 & npx wait-on http://localhost:3000
        working-directory: ./${{ inputs.frontendRepo }}
        
      - name: Change node version to 12.18.0
        uses: actions/setup-node@v2
        with:
          node-version: 12.18.0

      # Install dependencies and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          config-file: cypress.json
          working-directory: ./${{ inputs.e2eTestsRepo }}
        env:
          CYPRESS_ORGANIZATION_ID: ${{steps.create_org_for_tests.outputs.organizationId}}
          CYPRESS_ADMIN_PASSWORD: ${{secrets.demo_admin_password}}

      # after the test run completes
      # store videos and any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      # Alternative: create and commit an empty cypress/screenshots folder
      # to always have something to upload
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: ./${{ inputs.e2eTestsRepo }}/cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: ./${{ inputs.e2eTestsRepo }}/cypress/videos/

  # This job runs script to delete created org for testing
  delete-org:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [start-servers-and-tests, backend-mentoring-prepare]
    if: always()

    steps:

      - name: Get ${{ inputs.backendMentoringRepo }} sources and dependencies
        uses: actions/cache@v2
        with:
          path: ./${{ inputs.backendMentoringRepo }}
          key: ${{ inputs.backendMentoringRepo }}-source-and-dependencies-${{needs.backend-mentoring-prepare.outputs.commit}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.gcp }}
          export_default_credentials: true

      - name: Use Node.js 12.16.1
        uses: actions/setup-node@v2
        with:
          node-version: 12.16.1

      - name: Delete org created for testing
        run: yarn babel-node --extensions ".ts,.js" lib/scripts/deleteDemoOrg/deleteDemoOrg.js ${{needs.start-servers-and-tests.outputs.organizationId}}
        working-directory: ./${{ inputs.backendMentoringRepo }}
        env:
          TOGETHER_ENVIRONMENT: ${{ inputs.backendEnvironment }}
